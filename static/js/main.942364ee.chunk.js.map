{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchFeild","fetch","then","response","json","users","setState","this","filterMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAMaA,G,MAAO,SAAAC,GAAK,OACtB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,QAC3B,4BAAIN,EAAMI,QAAQG,aCALC,G,MAAW,SAAAR,GAAK,OAC5B,qBAAKC,UAAU,YAAf,SACED,EAAMI,QAAQK,KAAI,SAAAL,GAAO,OAAK,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCPtCK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACtB,uBACAX,UAAU,SACVY,KAAK,SACHF,YAAaA,EACZG,SAAUF,MCgCFG,G,wDAlCb,aAAc,IAAD,8BACX,gBAEKC,MAAO,CACVZ,QAAS,GACTa,YAAa,IALJ,E,gEAUO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACnB,QAASkB,S,+BAEhC,IAAD,SAC0BE,KAAKR,MAA9BZ,EADD,EACCA,QAASa,EADV,EACUA,YACVQ,EAAiBrB,EAAQsB,QAAO,SAAAtB,GAAO,OAAIA,EAAQE,KAAKqB,cAAcC,SAASX,EAAYU,kBAIjG,OACA,sBAAK1B,UAAU,MAAf,UACE,kDAEC,cAAC,EAAD,CACCU,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAG,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAEzD,cAAC,EAAD,CAAU3B,QAASqB,W,GA9BPO,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.942364ee.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.css'\n\n\n\nexport const Card = props => (\n   <div className='card-container'>\n       <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n       <h2> {props.monster.name}</h2>\n<p>{props.monster.email}</p>\n   </div> \n)","import React from 'react';\n\nimport  {Card} from '../card/card'\nimport './card-list.css';\n\n\n\n\n\n\nexport const CardList = props =>(\n <div className='card-list'>\n  {props.monster.map(monster => (<Card key={monster.id} monster={monster}/>\n  \n  ))}\n</div>\n    );\n\n\n","import React from 'react';\n\nimport './search-box.css';\n\n\nexport const  SearchBox = ({placeholder, handleChange}) => (\n    <input\n    className='search'\n    type='search' \n      placeholder={placeholder}\n       onChange={handleChange}\n       />\n)","\nimport React, {Component} from 'react'\nimport {CardList} from './components/card-list/card-list'\nimport {SearchBox} from './components/search-box/search-box'\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state ={\n      monster: [],\n      searchFeild: ''\n\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monster: users}))\n  }\n  render(){  \n    const {monster, searchFeild } = this.state;\n    const filterMonsters = monster.filter(monster => monster.name.toLowerCase().includes(searchFeild.toLowerCase()))\n  \n  \n  \n    return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n     \n       <SearchBox\n        placeholder='search monsters'\n        handleChange={e =>this.setState({searchFeild: e.target.value})}\n      />\n      <CardList monster={filterMonsters}/>\n  </div>\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}